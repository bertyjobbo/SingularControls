var SgRouterModule=angular.module("SgRouter",["ng"]);(function(n){n.Utils={GetHrefFromCommaSep:function(n,t){var i=t?"/":"#",r=n.split(",");return i+=r.join("/"),i+"/"}};n.provider("sgRoute",[function(){var n=this;n.SetTemplateUrlMethod=function(t){return n.TemplateUrlMethod=t,n};n.SetViewNotFoundRoute=function(t){return n.OnViewNotFoundRoute=t,n};n.OnViewNotFoundRoute=undefined;n.UseSgInit=!0;n.SetUseSgInit=function(t){return n.UseSgInit=t,n};n.MaxCacheLength=10;n.SetMaxCacheLength=function(t){return n.MaxCacheLength>4&&(n.MaxCacheLength=t),n};n.$get=function(){return n}}]);n.service("sgControllerChecker",["$controller",function(n){return{exists:function(t){if(typeof window[t]=="function")return!0;try{return n(t),!0}catch(i){return!(i instanceof TypeError)}}}}]);n.directive("sgHref",[function(){return{restrict:"A",link:function(t,i,r){var u=n.Utils.GetHrefFromCommaSep(r.sgHref);i.attr("href",u)}}}]);n.controller("EmptyRouterController",function(){});n.directive("sgView",["sgRoute","$http","$window","$rootScope","$compile","sgControllerChecker",function(t,i,r,u,f,e){if(u.SgView)throw"Only a single 'sg-view' directive can be applied per application";if(!t.TemplateUrlMethod)throw"Use sgRouteProvider.SetTemplateUrlMethod(function(controller,action){}); to define how this module gets it's template urls";return u.SgHref=function(t){r.location.hash=n.Utils.GetHrefFromCommaSep(t,!0)},{restrict:"A",link:function(o,s,h){s.removeAttr("sg-view");u.SgView={Element:s,Attributes:h,TemplateCache:{},TemplateCacheLength:0};u.$watch(function(){return r.location.hash},function(f){var o;if(u.$emit("sgBeforeRouteChange"),o=f.toLowerCase().split("/"),o.splice(0,1),o[0]==undefined&&r.location.hash!="#"){r.location=r.location+"#/";r.location.hash=="##/"&&(r.location.hash="#/");return}o[0]==""&&(o[0]="home");o[1]&&o[1]!=""||(o[1]="index");var a=o,h=o[0],v=h+"Controller",l=o[1],s=o.length>2?o.slice(2):[];s[0]==""&&(s=[]);u.SgView.CurrentRoute={RawData:a,Controller:v,Action:l,Params:s,TemplateUrl:t.TemplateUrlMethod(h,l)};e.exists(u.SgView.CurrentRoute.Controller)||(u.SgView.CurrentRoute.Controller="EmptyRouterController",console.log("Using EmptyRouterController"));u.SgView.TemplateCache[u.SgView.CurrentRoute.TemplateUrl]==undefined?i.get(u.SgView.CurrentRoute.TemplateUrl).success(function(n){if(u.SgView.TemplateCache[u.SgView.CurrentRoute.TemplateUrl]=n,u.SgView.TemplateCacheLength++,u.SgView.TemplateCacheLength>t.MaxCacheLength){u.SgView.TemplateCacheLength--;for(var i in u.SgView.TemplateCache){delete u.SgView.TemplateCache[i];break}}c()}).error(function(i){u.SgView.LastError=i;console.log(i);t.OnViewNotFoundRoute!=undefined&&(r.location.hash=n.Utils.GetHrefFromCommaSep(t.OnViewNotFoundRoute,!0));return}):c()},!0);var c=function(){var i=u.SgView.CurrentRoute.Action.toTitleCase()+"(",n=u.SgView.CurrentRoute.Params.join(",");n.substr(n.length-1,1)==","&&(n=n.substr(0,n.length-1));i+=n+")";u.SgView.Element.attr("ng-controller",u.SgView.CurrentRoute.Controller);u.SgView.Element.attr(t.UseSgInit?"sg-init":"ng-init",i);u.SgView.Element.html(u.SgView.TemplateCache[u.SgView.CurrentRoute.TemplateUrl]);f(u.SgView.Element)(u);u.$emit("sgAfterRouteChange")}}}}])})(SgRouterModule);
/*
//# sourceMappingURL=SgRouter.min.js.map
*/